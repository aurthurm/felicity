"""ini felicity Mon Nov 30 13:33:46 UTC 2020

Revision ID: 281ce8e37b58
Revises: 
Create Date: 2020-11-30 13:33:47.923245

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '281ce8e37b58'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('country',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_country_code'), 'country', ['code'], unique=True)
    op.create_index(op.f('ix_country_uid'), 'country', ['uid'], unique=False)
    op.create_table('department',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_department_uid'), 'department', ['uid'], unique=False)
    op.create_table('method',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('keyword', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_method_uid'), 'method', ['uid'], unique=False)
    op.create_table('patient',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('client_patient_id', sa.String(), nullable=False),
    sa.Column('patient_id', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('gender', sa.Integer(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(), nullable=True),
    sa.Column('age_dob_estimated', sa.Boolean(), nullable=True),
    sa.Column('phone_mobile', sa.String(), nullable=True),
    sa.Column('phone_home', sa.String(), nullable=True),
    sa.Column('consent_sms', sa.Boolean(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_patient_client_patient_id'), 'patient', ['client_patient_id'], unique=True)
    op.create_index(op.f('ix_patient_patient_id'), 'patient', ['patient_id'], unique=True)
    op.create_index(op.f('ix_patient_uid'), 'patient', ['uid'], unique=False)
    op.create_table('supplier',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_supplier_uid'), 'supplier', ['uid'], unique=False)
    op.create_table('userauth',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_name', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('login_retry', sa.Integer(), nullable=True),
    sa.Column('is_blocked', sa.Boolean(), nullable=True),
    sa.Column('user_type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_userauth_uid'), 'userauth', ['uid'], unique=False)
    op.create_index(op.f('ix_userauth_user_name'), 'userauth', ['user_name'], unique=True)
    op.create_table('clientcontact',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('mobile_phone', sa.String(), nullable=True),
    sa.Column('business_phone', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('auth_uid', sa.Integer(), nullable=True),
    sa.Column('email_cc', sa.String(), nullable=True),
    sa.Column('consent_sms', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['auth_uid'], ['userauth.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_clientcontact_email'), 'clientcontact', ['email'], unique=True)
    op.create_index(op.f('ix_clientcontact_first_name'), 'clientcontact', ['first_name'], unique=False)
    op.create_index(op.f('ix_clientcontact_last_name'), 'clientcontact', ['last_name'], unique=False)
    op.create_index(op.f('ix_clientcontact_uid'), 'clientcontact', ['uid'], unique=False)
    op.create_table('instrument',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('keyword', sa.String(), nullable=True),
    sa.Column('supplier_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['supplier_uid'], ['supplier.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_instrument_uid'), 'instrument', ['uid'], unique=False)
    op.create_table('province',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('email_cc', sa.String(), nullable=True),
    sa.Column('consent_email', sa.Boolean(), nullable=True),
    sa.Column('mobile_phone', sa.String(), nullable=True),
    sa.Column('business_phone', sa.String(), nullable=True),
    sa.Column('consent_sms', sa.Boolean(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('country_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['country_uid'], ['country.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_province_code'), 'province', ['code'], unique=True)
    op.create_index(op.f('ix_province_uid'), 'province', ['uid'], unique=False)
    op.create_table('user',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('mobile_phone', sa.String(), nullable=True),
    sa.Column('business_phone', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('auth_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['auth_uid'], ['userauth.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_first_name'), 'user', ['first_name'], unique=False)
    op.create_index(op.f('ix_user_last_name'), 'user', ['last_name'], unique=False)
    op.create_index(op.f('ix_user_uid'), 'user', ['uid'], unique=False)
    op.create_table('district',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('email_cc', sa.String(), nullable=True),
    sa.Column('consent_email', sa.Boolean(), nullable=True),
    sa.Column('mobile_phone', sa.String(), nullable=True),
    sa.Column('business_phone', sa.String(), nullable=True),
    sa.Column('consent_sms', sa.Boolean(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('province_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['province_uid'], ['province.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_district_code'), 'district', ['code'], unique=True)
    op.create_index(op.f('ix_district_uid'), 'district', ['uid'], unique=False)
    op.create_table('laboratory',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('setup_name', sa.String(), nullable=False),
    sa.Column('lab_name', sa.String(), nullable=False),
    sa.Column('lab_manager_uid', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('email_cc', sa.String(), nullable=True),
    sa.Column('mobile_phone', sa.String(), nullable=True),
    sa.Column('business_phone', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['lab_manager_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_laboratory_uid'), 'laboratory', ['uid'], unique=False)
    op.create_table('client',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('district_uid', sa.Integer(), nullable=True),
    sa.Column('province_uid', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('email_cc', sa.String(), nullable=True),
    sa.Column('consent_email', sa.Boolean(), nullable=True),
    sa.Column('phone_mobile', sa.String(), nullable=True),
    sa.Column('phone_business', sa.String(), nullable=True),
    sa.Column('consent_sms', sa.Boolean(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['district_uid'], ['district.uid'], ),
    sa.ForeignKeyConstraint(['province_uid'], ['province.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_client_code'), 'client', ['code'], unique=True)
    op.create_index(op.f('ix_client_uid'), 'client', ['uid'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_client_uid'), table_name='client')
    op.drop_index(op.f('ix_client_code'), table_name='client')
    op.drop_table('client')
    op.drop_index(op.f('ix_laboratory_uid'), table_name='laboratory')
    op.drop_table('laboratory')
    op.drop_index(op.f('ix_district_uid'), table_name='district')
    op.drop_index(op.f('ix_district_code'), table_name='district')
    op.drop_table('district')
    op.drop_index(op.f('ix_user_uid'), table_name='user')
    op.drop_index(op.f('ix_user_last_name'), table_name='user')
    op.drop_index(op.f('ix_user_first_name'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_province_uid'), table_name='province')
    op.drop_index(op.f('ix_province_code'), table_name='province')
    op.drop_table('province')
    op.drop_index(op.f('ix_instrument_uid'), table_name='instrument')
    op.drop_table('instrument')
    op.drop_index(op.f('ix_clientcontact_uid'), table_name='clientcontact')
    op.drop_index(op.f('ix_clientcontact_last_name'), table_name='clientcontact')
    op.drop_index(op.f('ix_clientcontact_first_name'), table_name='clientcontact')
    op.drop_index(op.f('ix_clientcontact_email'), table_name='clientcontact')
    op.drop_table('clientcontact')
    op.drop_index(op.f('ix_userauth_user_name'), table_name='userauth')
    op.drop_index(op.f('ix_userauth_uid'), table_name='userauth')
    op.drop_table('userauth')
    op.drop_index(op.f('ix_supplier_uid'), table_name='supplier')
    op.drop_table('supplier')
    op.drop_index(op.f('ix_patient_uid'), table_name='patient')
    op.drop_index(op.f('ix_patient_patient_id'), table_name='patient')
    op.drop_index(op.f('ix_patient_client_patient_id'), table_name='patient')
    op.drop_table('patient')
    op.drop_index(op.f('ix_method_uid'), table_name='method')
    op.drop_table('method')
    op.drop_index(op.f('ix_department_uid'), table_name='department')
    op.drop_table('department')
    op.drop_index(op.f('ix_country_uid'), table_name='country')
    op.drop_index(op.f('ix_country_code'), table_name='country')
    op.drop_table('country')
    # ### end Alembic commands ###
