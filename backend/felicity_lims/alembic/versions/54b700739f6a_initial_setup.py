"""initial setup

Revision ID: 54b700739f6a
Revises: 
Create Date: 2021-04-03 17:47:54.858240

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '54b700739f6a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('analysiscategory',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_analysiscategory_uid'), 'analysiscategory', ['uid'], unique=False)
    op.create_table('country',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_country_code'), 'country', ['code'], unique=True)
    op.create_index(op.f('ix_country_uid'), 'country', ['uid'], unique=False)
    op.create_table('department',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_department_uid'), 'department', ['uid'], unique=False)
    op.create_table('job',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('action', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('job_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('reason', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_job_uid'), 'job', ['uid'], unique=False)
    op.create_table('method',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('keyword', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_method_uid'), 'method', ['uid'], unique=False)
    op.create_table('profile',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('keyword', sa.String(), nullable=True),
    sa.Column('tat_length_minutes', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('keyword')
    )
    op.create_index(op.f('ix_profile_uid'), 'profile', ['uid'], unique=False)
    op.create_table('rejectionreason',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('reason', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_rejectionreason_uid'), 'rejectionreason', ['uid'], unique=False)
    op.create_table('sampletype',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('abbr', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_sampletype_uid'), 'sampletype', ['uid'], unique=False)
    op.create_table('supplier',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_supplier_uid'), 'supplier', ['uid'], unique=False)
    op.create_table('userauth',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_name', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('login_retry', sa.Integer(), nullable=True),
    sa.Column('is_blocked', sa.Boolean(), nullable=True),
    sa.Column('user_type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_userauth_uid'), 'userauth', ['uid'], unique=False)
    op.create_index(op.f('ix_userauth_user_name'), 'userauth', ['user_name'], unique=True)
    op.create_table('analysis',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('keyword', sa.String(), nullable=False),
    sa.Column('unit', sa.String(), nullable=True),
    sa.Column('category_uid', sa.Integer(), nullable=True),
    sa.Column('tat_length_minutes', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['category_uid'], ['analysiscategory.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('keyword')
    )
    op.create_index(op.f('ix_analysis_uid'), 'analysis', ['uid'], unique=False)
    op.create_table('instrument',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('keyword', sa.String(), nullable=True),
    sa.Column('supplier_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['supplier_uid'], ['supplier.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_instrument_uid'), 'instrument', ['uid'], unique=False)
    op.create_table('province',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('email_cc', sa.String(), nullable=True),
    sa.Column('mobile_phone', sa.String(), nullable=True),
    sa.Column('business_phone', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('country_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['country_uid'], ['country.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_province_code'), 'province', ['code'], unique=True)
    op.create_index(op.f('ix_province_uid'), 'province', ['uid'], unique=False)
    op.create_table('user',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('mobile_phone', sa.String(), nullable=True),
    sa.Column('business_phone', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('auth_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['auth_uid'], ['userauth.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_first_name'), 'user', ['first_name'], unique=False)
    op.create_index(op.f('ix_user_last_name'), 'user', ['last_name'], unique=False)
    op.create_index(op.f('ix_user_uid'), 'user', ['uid'], unique=False)
    op.create_table('aplink',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('analysis_uid', sa.Integer(), nullable=False),
    sa.Column('profile_uid', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['analysis_uid'], ['analysis.uid'], ),
    sa.ForeignKeyConstraint(['profile_uid'], ['profile.uid'], ),
    sa.PrimaryKeyConstraint('uid', 'analysis_uid', 'profile_uid')
    )
    op.create_index(op.f('ix_aplink_uid'), 'aplink', ['uid'], unique=False)
    op.create_table('astlink',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sampletype_uid', sa.Integer(), nullable=False),
    sa.Column('analysis_uid', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['analysis_uid'], ['analysis.uid'], ),
    sa.ForeignKeyConstraint(['sampletype_uid'], ['sampletype.uid'], ),
    sa.PrimaryKeyConstraint('uid', 'sampletype_uid', 'analysis_uid')
    )
    op.create_index(op.f('ix_astlink_uid'), 'astlink', ['uid'], unique=False)
    op.create_table('district',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('email_cc', sa.String(), nullable=True),
    sa.Column('mobile_phone', sa.String(), nullable=True),
    sa.Column('business_phone', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('province_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['province_uid'], ['province.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_district_code'), 'district', ['code'], unique=True)
    op.create_index(op.f('ix_district_uid'), 'district', ['uid'], unique=False)
    op.create_table('laboratory',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('setup_name', sa.String(), nullable=False),
    sa.Column('lab_name', sa.String(), nullable=False),
    sa.Column('lab_manager_uid', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('email_cc', sa.String(), nullable=True),
    sa.Column('mobile_phone', sa.String(), nullable=True),
    sa.Column('business_phone', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['lab_manager_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_laboratory_uid'), 'laboratory', ['uid'], unique=False)
    op.create_table('resultoption',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('option_key', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('analysis_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['analysis_uid'], ['analysis.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_resultoption_uid'), 'resultoption', ['uid'], unique=False)
    op.create_table('client',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('district_uid', sa.Integer(), nullable=True),
    sa.Column('province_uid', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('email_cc', sa.String(), nullable=True),
    sa.Column('consent_email', sa.Boolean(), nullable=True),
    sa.Column('phone_mobile', sa.String(), nullable=True),
    sa.Column('phone_business', sa.String(), nullable=True),
    sa.Column('consent_sms', sa.Boolean(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['district_uid'], ['district.uid'], ),
    sa.ForeignKeyConstraint(['province_uid'], ['province.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_client_code'), 'client', ['code'], unique=True)
    op.create_index(op.f('ix_client_uid'), 'client', ['uid'], unique=False)
    op.create_table('clientcontact',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('mobile_phone', sa.String(), nullable=True),
    sa.Column('business_phone', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('auth_uid', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('email_cc', sa.String(), nullable=True),
    sa.Column('consent_sms', sa.Boolean(), nullable=True),
    sa.Column('client_uid', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['auth_uid'], ['userauth.uid'], ),
    sa.ForeignKeyConstraint(['client_uid'], ['client.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_clientcontact_email'), 'clientcontact', ['email'], unique=False)
    op.create_index(op.f('ix_clientcontact_first_name'), 'clientcontact', ['first_name'], unique=False)
    op.create_index(op.f('ix_clientcontact_last_name'), 'clientcontact', ['last_name'], unique=False)
    op.create_index(op.f('ix_clientcontact_uid'), 'clientcontact', ['uid'], unique=False)
    op.create_table('patient',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('client_patient_id', sa.String(), nullable=False),
    sa.Column('patient_id', sa.String(), nullable=True),
    sa.Column('client_uid', sa.Integer(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('gender', sa.Integer(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(), nullable=True),
    sa.Column('age_dob_estimated', sa.Boolean(), nullable=True),
    sa.Column('phone_mobile', sa.String(), nullable=True),
    sa.Column('phone_home', sa.String(), nullable=True),
    sa.Column('consent_sms', sa.Boolean(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['client_uid'], ['client.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_patient_client_patient_id'), 'patient', ['client_patient_id'], unique=True)
    op.create_index(op.f('ix_patient_patient_id'), 'patient', ['patient_id'], unique=True)
    op.create_index(op.f('ix_patient_uid'), 'patient', ['uid'], unique=False)
    op.create_table('analysisrequest',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('patient_uid', sa.Integer(), nullable=True),
    sa.Column('client_uid', sa.Integer(), nullable=True),
    sa.Column('request_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['client_uid'], ['client.uid'], ),
    sa.ForeignKeyConstraint(['patient_uid'], ['patient.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_analysisrequest_request_id'), 'analysisrequest', ['request_id'], unique=True)
    op.create_index(op.f('ix_analysisrequest_uid'), 'analysisrequest', ['uid'], unique=False)
    op.create_table('sample',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('analysisrequest_uid', sa.Integer(), nullable=False),
    sa.Column('sampletype_uid', sa.Integer(), nullable=False),
    sa.Column('sample_id', sa.String(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('assigned', sa.Boolean(), nullable=True),
    sa.Column('invalidated_by_uid', sa.Integer(), nullable=True),
    sa.Column('date_invalidated', sa.DateTime(), nullable=True),
    sa.Column('tree_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('lft', sa.Integer(), nullable=False),
    sa.Column('rgt', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['analysisrequest_uid'], ['analysisrequest.uid'], ),
    sa.ForeignKeyConstraint(['invalidated_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['sample.uid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sampletype_uid'], ['sampletype.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_sample_level'), 'sample', ['level'], unique=False)
    op.create_index(op.f('ix_sample_lft'), 'sample', ['lft'], unique=False)
    op.create_index(op.f('ix_sample_rgt'), 'sample', ['rgt'], unique=False)
    op.create_index(op.f('ix_sample_sample_id'), 'sample', ['sample_id'], unique=True)
    op.create_index(op.f('ix_sample_uid'), 'sample', ['uid'], unique=False)
    op.create_table('analysisresult',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sample_uid', sa.Integer(), nullable=False),
    sa.Column('analysis_uid', sa.Integer(), nullable=False),
    sa.Column('instrument_uid', sa.Integer(), nullable=True),
    sa.Column('method_uid', sa.Integer(), nullable=True),
    sa.Column('result', sa.String(), nullable=True),
    sa.Column('analyst_uid', sa.Integer(), nullable=True),
    sa.Column('submitted_by_uid', sa.Integer(), nullable=True),
    sa.Column('date_submitted', sa.DateTime(), nullable=True),
    sa.Column('verified_by_uid', sa.Integer(), nullable=True),
    sa.Column('date_verified', sa.DateTime(), nullable=True),
    sa.Column('invalidated_by_uid', sa.Integer(), nullable=True),
    sa.Column('date_invalidated', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('tree_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('lft', sa.Integer(), nullable=False),
    sa.Column('rgt', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['analysis_uid'], ['analysis.uid'], ),
    sa.ForeignKeyConstraint(['analyst_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['instrument_uid'], ['instrument.uid'], ),
    sa.ForeignKeyConstraint(['invalidated_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['method_uid'], ['method.uid'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['analysisresult.uid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sample_uid'], ['sample.uid'], ),
    sa.ForeignKeyConstraint(['submitted_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['verified_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_analysisresult_level'), 'analysisresult', ['level'], unique=False)
    op.create_index(op.f('ix_analysisresult_lft'), 'analysisresult', ['lft'], unique=False)
    op.create_index(op.f('ix_analysisresult_rgt'), 'analysisresult', ['rgt'], unique=False)
    op.create_index(op.f('ix_analysisresult_uid'), 'analysisresult', ['uid'], unique=False)
    op.create_table('rrslink',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sample_uid', sa.Integer(), nullable=False),
    sa.Column('rejection_reason_uid', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['rejection_reason_uid'], ['rejectionreason.uid'], ),
    sa.ForeignKeyConstraint(['sample_uid'], ['sample.uid'], ),
    sa.PrimaryKeyConstraint('uid', 'sample_uid', 'rejection_reason_uid')
    )
    op.create_index(op.f('ix_rrslink_uid'), 'rrslink', ['uid'], unique=False)
    op.create_table('salink',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sample_uid', sa.Integer(), nullable=False),
    sa.Column('analysis_uid', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['analysis_uid'], ['analysis.uid'], ),
    sa.ForeignKeyConstraint(['sample_uid'], ['sample.uid'], ),
    sa.PrimaryKeyConstraint('uid', 'sample_uid', 'analysis_uid')
    )
    op.create_index(op.f('ix_salink_uid'), 'salink', ['uid'], unique=False)
    op.create_table('splink',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sample_uid', sa.Integer(), nullable=False),
    sa.Column('profile_uid', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['profile_uid'], ['profile.uid'], ),
    sa.ForeignKeyConstraint(['sample_uid'], ['sample.uid'], ),
    sa.PrimaryKeyConstraint('uid', 'sample_uid', 'profile_uid')
    )
    op.create_index(op.f('ix_splink_uid'), 'splink', ['uid'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_splink_uid'), table_name='splink')
    op.drop_table('splink')
    op.drop_index(op.f('ix_salink_uid'), table_name='salink')
    op.drop_table('salink')
    op.drop_index(op.f('ix_rrslink_uid'), table_name='rrslink')
    op.drop_table('rrslink')
    op.drop_index(op.f('ix_analysisresult_uid'), table_name='analysisresult')
    op.drop_index(op.f('ix_analysisresult_rgt'), table_name='analysisresult')
    op.drop_index(op.f('ix_analysisresult_lft'), table_name='analysisresult')
    op.drop_index(op.f('ix_analysisresult_level'), table_name='analysisresult')
    op.drop_table('analysisresult')
    op.drop_index(op.f('ix_sample_uid'), table_name='sample')
    op.drop_index(op.f('ix_sample_sample_id'), table_name='sample')
    op.drop_index(op.f('ix_sample_rgt'), table_name='sample')
    op.drop_index(op.f('ix_sample_lft'), table_name='sample')
    op.drop_index(op.f('ix_sample_level'), table_name='sample')
    op.drop_table('sample')
    op.drop_index(op.f('ix_analysisrequest_uid'), table_name='analysisrequest')
    op.drop_index(op.f('ix_analysisrequest_request_id'), table_name='analysisrequest')
    op.drop_table('analysisrequest')
    op.drop_index(op.f('ix_patient_uid'), table_name='patient')
    op.drop_index(op.f('ix_patient_patient_id'), table_name='patient')
    op.drop_index(op.f('ix_patient_client_patient_id'), table_name='patient')
    op.drop_table('patient')
    op.drop_index(op.f('ix_clientcontact_uid'), table_name='clientcontact')
    op.drop_index(op.f('ix_clientcontact_last_name'), table_name='clientcontact')
    op.drop_index(op.f('ix_clientcontact_first_name'), table_name='clientcontact')
    op.drop_index(op.f('ix_clientcontact_email'), table_name='clientcontact')
    op.drop_table('clientcontact')
    op.drop_index(op.f('ix_client_uid'), table_name='client')
    op.drop_index(op.f('ix_client_code'), table_name='client')
    op.drop_table('client')
    op.drop_index(op.f('ix_resultoption_uid'), table_name='resultoption')
    op.drop_table('resultoption')
    op.drop_index(op.f('ix_laboratory_uid'), table_name='laboratory')
    op.drop_table('laboratory')
    op.drop_index(op.f('ix_district_uid'), table_name='district')
    op.drop_index(op.f('ix_district_code'), table_name='district')
    op.drop_table('district')
    op.drop_index(op.f('ix_astlink_uid'), table_name='astlink')
    op.drop_table('astlink')
    op.drop_index(op.f('ix_aplink_uid'), table_name='aplink')
    op.drop_table('aplink')
    op.drop_index(op.f('ix_user_uid'), table_name='user')
    op.drop_index(op.f('ix_user_last_name'), table_name='user')
    op.drop_index(op.f('ix_user_first_name'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_province_uid'), table_name='province')
    op.drop_index(op.f('ix_province_code'), table_name='province')
    op.drop_table('province')
    op.drop_index(op.f('ix_instrument_uid'), table_name='instrument')
    op.drop_table('instrument')
    op.drop_index(op.f('ix_analysis_uid'), table_name='analysis')
    op.drop_table('analysis')
    op.drop_index(op.f('ix_userauth_user_name'), table_name='userauth')
    op.drop_index(op.f('ix_userauth_uid'), table_name='userauth')
    op.drop_table('userauth')
    op.drop_index(op.f('ix_supplier_uid'), table_name='supplier')
    op.drop_table('supplier')
    op.drop_index(op.f('ix_sampletype_uid'), table_name='sampletype')
    op.drop_table('sampletype')
    op.drop_index(op.f('ix_rejectionreason_uid'), table_name='rejectionreason')
    op.drop_table('rejectionreason')
    op.drop_index(op.f('ix_profile_uid'), table_name='profile')
    op.drop_table('profile')
    op.drop_index(op.f('ix_method_uid'), table_name='method')
    op.drop_table('method')
    op.drop_index(op.f('ix_job_uid'), table_name='job')
    op.drop_table('job')
    op.drop_index(op.f('ix_department_uid'), table_name='department')
    op.drop_table('department')
    op.drop_index(op.f('ix_country_uid'), table_name='country')
    op.drop_index(op.f('ix_country_code'), table_name='country')
    op.drop_table('country')
    op.drop_index(op.f('ix_analysiscategory_uid'), table_name='analysiscategory')
    op.drop_table('analysiscategory')
    # ### end Alembic commands ###
